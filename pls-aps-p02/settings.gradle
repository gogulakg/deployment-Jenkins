// Using this settings.gradle file assumes that
// there is an init script providing repositories

buildscript {
        gradle.injectRepositories(repositories, configurations)
        dependencies {
                classpath 'com.intershop:deployment-bootstrap:2.11.4'
        }
}

// tell Gradle to run the deployment and configure parameters
apply plugin: com.intershop.deploy.bootstrap.DeploymentBootstrapPlugin

deploymentBootstrap {
	gradle.injectRepositories(repositoryHandler, configurationContainer)

// ######### CONFIGURATION FOR JENKINS DEPLOYMENT ######
        def ASSEMBLY = System.getenv("ASSEMBLY")
        if(ASSEMBLY != null) {
                println "ASSEMBLY to deploy: $ASSEMBLY"
        } else {
                println "No ASSEMBLY version supplied. Latest assembly   will be used."
                ASSEMBLY="+"
        }
			assembly ("com.eperium.assembly:plus:$ASSEMBLY") {

		/*
		 * Define the type of your deployment. According to hostType and environment the contained cartridges
		 * and local component vary.
		 * The host types are defined in your assembly (e.g. 'webserver', 'appserver', 'share', 'all')
		 * The environments are defined in your assembly (e.g. 'development', 'test', 'production')
		 *
		 * hostType = 'webserver' | 'appserver' | 'share' | 'all' | 'javadoc'
		 * environment = 'development' | 'test' | 'production'
		 *
		 * hostType {
		 *     hostType 'all'
		 *     environment 'production'
		 * }
		 */
		hostType {
			hostType 'appserver'
			environment 'prelive'
		}
	}
	
	// Configure the deployment
	config {
		/*
		 * Adjust the default settings, if necessary. The default configuration is recommended.
		 * IS_SHARE may not a subfolder of IS_HOME
		 * The settingsDir may not in IS_HOME
		 */
		target {
			/*
			 * Configure the platform we are on.
			 *
			 * platform = 'linux.rhel.x86_64' | 'linux.sles.x86_64' | 'win.x86_64'
			 */
			platform = 'linux.rhel.x86_64'
			
			// Id of the instance has to be a number for now
			instanceId = '1'
			
			// IS_SHARE should be located in the 'share' subdirectory of this script's directory
			shareDirectory = new File('/opt/intershop/eserver1/share')
			
			
			// IS_HOME should be located in the 'local' subdirectory of this script's directory
			localDirectory = new File('/opt/intershop/eserver1/local')
			
			// Local cartridge path for app server
			cartridgesPath = new File('/opt/intershop/eserver1/local/cartridges')
		}
		
		assemblyDeployment {
			// Name of user and group that should own the deployed files
			// (needed on windows and linux)
			// The deployment can only be run by the specified user
			user = 'intershop1'
			userGroup = 'isgrp1'
			
			/*
			 * Configure undeployment.
			 * purgeUnknownFiles = true | false
			 *
			 * true: Clean all
			 * false: Keep files produced outside the deployment (e.g. log files) in file system.
			 */
			purgeUnknownFiles = true
			modificationPriorities = ['default', 'intershop', 'development']
		}
		
		/*
		 * Declare some appserver instances.
		 *
		 * Add a new instance by adding a new block:
		 * appserver[n] {
		 *     tomcatShutdownPort = <PORT1>
		 *     tomcatHttpPort = <PORT2>
		 *     tomcatHttpsPort = <PORT3>
		 *     appserverPort = <PORT4>
		 * }
		 * Please use a sequence starting with zero as suffix:
		 * appserver0, appserver1, appserver2, ...
		 */
		database {
			oracleClientDir = new File('/opt/oracle/product/12.1.0/dbclient_1/')
		}

        tomcat {
 			instances {
   				appserver0 {
     				shutdownPort = 10051
      				port = 10052
       				securePort = 10053
    				jvmArgs {
      					minHeapSize = 4096
      					maxHeapSize = 4096
    				}	
  				}
    		}
		}
			
		appserver {
			nodemanagerJmxPort = 10050
			hostname = 'pls-aps-p02'
			instances {
				appserver0 {
					tomcatShutdownPort = 10051
					tomcatHttpPort = 10052
					tomcatHttpsPort = 10053
					appserverPort = 10054
				}      
			}
		}

		solr {
            server 'http://internal-solr-1572118366.eu-west-1.elb.amazonaws.com:10052'
            contextPath '/solr'
            clusterNodes 'http://pls-solr-p02:10052,http://pls-solr-p03:10052'
        }
				
		webadapter {
			sharedMemoryKey = '0x2001'
			port = 80
			securePort = 443
			hostname = 'newaccplus.salnl.net'
			useSSLBox         = true
            sslBoxSecuredPort = 81
		}
		
		// Configure the location of your license.
		// The license file must be available
		license {
			licenseFile = new File('/opt/intershop/eserver1/share/system/license/license.xml')
		}
	

		deployment {
			filters {
				overrideProperties('appserver'){
					dir = target.localDirectory
					include  'config/appserver0.properties'
					properties['intershop.cpu.id'] = '0,1'
				}
			}
		}
	}
}
